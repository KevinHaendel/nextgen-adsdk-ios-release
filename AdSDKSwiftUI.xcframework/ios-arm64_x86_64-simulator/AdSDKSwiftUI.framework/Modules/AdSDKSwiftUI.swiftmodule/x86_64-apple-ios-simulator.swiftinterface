// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 5.10 (swiftlang-5.10.0.13 clang-1500.3.9.4)
// swift-module-flags: -target x86_64-apple-ios14.0-simulator -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -O -package-name com.adsdk.core -enable-bare-slash-regex -module-name AdSDKSwiftUI
import AdSDKCore
@_exported import AdSDKSwiftUI
import Combine
import DeveloperToolsSupport
import Foundation
import Swift
import SwiftUI
import UIKit.UIColor
import UIKit.UIImage
import UIKit
import WebKit
import _Concurrency
import _StringProcessing
import _SwiftConcurrencyShims
import os
extension AdSDKCore.AdService {
  public static func configure(networkID: Swift.UInt, cacheSize: Swift.UInt8 = 100, timeout: Swift.Int = 60) -> Combine.AnyPublisher<AdSDKCore.AdService, AdSDKCore.AdError>
  #if compiler(>=5.3) && $AsyncAwait
  public static func configure(networkID: Swift.UInt, cacheSize: Swift.UInt8 = 100, timeout: Swift.Int = 60) async throws -> AdSDKCore.AdService
  #endif
  final public func getAdSDKSwiftUIVersion() -> Swift.String
}
extension SwiftUI.View {
  public func interstitial(isShouldBePresented: SwiftUI.Binding<Swift.Bool>, _ advertisement: any AdSDKCore.Advertisement) -> some SwiftUI.View
  
}
extension SwiftUI.View {
  public func adsContainer(width: CoreFoundation.CGFloat? = nil, height: CoreFoundation.CGFloat? = nil, alignment: SwiftUI.Alignment = .center) -> some SwiftUI.View
  
  public func adsContainer(minWidth: CoreFoundation.CGFloat? = nil, idealWidth: CoreFoundation.CGFloat? = nil, maxWidth: CoreFoundation.CGFloat? = nil, minHeight: CoreFoundation.CGFloat? = nil, idealHeight: CoreFoundation.CGFloat? = nil, maxHeight: CoreFoundation.CGFloat? = nil, alignment: SwiftUI.Alignment = .center) -> some SwiftUI.View
  
}
extension AdSDKCore.AssetRequest : Swift.Decodable {
  public init(from decoder: any Swift.Decoder) throws
}
@_Concurrency.MainActor(unsafe) public struct AdView : SwiftUI.View {
  @_Concurrency.MainActor(unsafe) public init(advertisement: any AdSDKCore.Advertisement)
  @_Concurrency.MainActor(unsafe) public var body: some SwiftUI.View {
    get
  }
  public typealias Body = @_opaqueReturnTypeOf("$s12AdSDKSwiftUI0A4ViewV4bodyQrvp", 0) __
}
